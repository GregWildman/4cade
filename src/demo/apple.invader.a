;license:MIT
;(c) 2021-2022 by Frank M., qkumba

!cpu 6502
!to "build/DEMO/APPLE.INVADER#060200",plain
*=$200

         !source "src/constants.a"   ; no code in these
         !source "src/macros.a"

         +GAME_REQUIRES_JOYSTICK

         +ENABLE_ACCEL_LC
         +LOAD_XSINGLE title

         lda   #$60
         sta   $6027
         jsr   $6000      ; decompress

         lda   #$D0
         sta   $1C37      ; kill occasional sound

         ldx   #$D8       ; move location from $3F2 to $3D8
         stx   $1113      ; (program uses reset vector for storage)
         stx   $1245
         stx   $4A2C
         stx   $4A34
         stx   $4A41
         stx   $5A9C
         stx   $5AA4
         stx   $5AB1
         stx   $5A9C
         inx              ; move location from $3F3 to $3D9
         stx   $1FA0
         stx   $4A31
         stx   $4F4D
         stx   $5AA1
         inx              ; move location from $3F4 to $3DA
         stx   $11AF
         stx   $1824
         stx   $19DF
         stx   $1DE8
         stx   $1E5A      ; reset vector fix

         inx              ; move location from $3FE to $3DB
         stx   $4AF9      ; (program uses IRQ vector for storage)
         stx   $4B0F
         stx   $5B69
         stx   $5B7F
         inx              ; move location from $3FF to $3DC
         stx   $4B02
         stx   $4B07
         stx   $4B14
         stx   $5B72
         stx   $5B77
         stx   $5B84      ; IRQ vector fix

         lda   #$4C
         sta   $46C0
         ldx   #0
         stx   $46C0+1
         stx   $4A96      ; (moved to $1E37+1)
         inx
         stx   $46C0+2    ; exit on keypress
         stx   $4A9B      ; exit at end of demo loop (moved to $1E37+2)

         +DISABLE_ACCEL
         jmp   $5F00

title    +PSTRING "APPLE.INVADER"

!if * > $300 {
  !error "code is too large, ends at ", *
}
